#ifndef DATABASEMANAGEMENTSYSTEM_H
#define DATABASEMANAGEMENTSYSTEM_H
#include<iostream>
#include<fstream>
#include "hashtable.h"
#include "hashtable.cpp"
#include "fn.h"
#include <iostream>
#include <string>
#include <vector>
#include "player.h"
using namespace std;
template <typename T>
class DataBaseManagementSystem
{
    ///located in fn.h
    friend void vectorintoarray(vector<T> vec, T *arr , int arrsize);

vector<string> split();///prototype
public:
    DataBaseManagementSystem(){
        hashPlayer=new HashTable<string,Person>(120);
    }
    void loadPlayerIntoHash(){
        string line;
        ifstream file;
        file.open("Player.txt");
        vector<string> readline;
        if(file.is_open())
        {
            while (getline(file,line)) {
                readline=split(line,',');
                //convertir atr a int
                int n = std::stoi(readline[4]);
                int u = std::stoi(readline[6]);
                int v = std::stoi(readline[7]);
                int x = std::stoi(readline[8]);
                int y = std::stoi(readline[9]);

                Player *p=new Player(readline[0],readline[1],readline[2],
                        readline[3],n,readline[5],u,v,x,y);
            }
        }
        file.close();

    }
    void adrenocorticotrophinetriyodotironine();
    void inserPlayertIntoVector(vector<T> vec, T ob){
            T temp = ob;
            vec.push_back(temp);
            ///sort
    }

    void insertIntoTxt(T ob){
        string ss= std::to_string(ob);

    }
private:
    void writeFile(string fileName, string content)
    {
        ofstream file;
        file.open(fileName,ios::app);
        file << content;
        file.close();
    }

    vector<string> split(string str,char separator)
    {
        vector<string> splitVector;
        string ss;
        for (size_t i=0;i< str.length();i++) {
            if(str[i]!=separator)
                ss+=str[i];
            if(str[i]==separator or i==str.length()-1)
            {
                splitVector.push_back(ss);
                ss=' ';
            }
        }
        return splitVector;
    }
    HashTable<string,Person> *hashPlayer;
};

#endif // DATABASEMANAGEMENTSYSTEM_H
